1731774325
waR3U4bTeM%3A21ba7a1a3f62e7b167bc827b5d14114d-0afddf52eba4981e83ada84073d6a3cb
s:72248:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"0afddf52eba4981e83ada84073d6a3cb";s:39:" phpDocumentor\Reflection\Php\File name";s:68:"8ae2a79ba43a27403579e93144ee3e7eee0bfce1126d5a3b099dde93aa9d2a3f.php";s:39:" phpDocumentor\Reflection\Php\File path";s:90:"var/cache/dev/twig/8a/8ae2a79ba43a27403579e93144ee3e7eee0bfce1126d5a3b099dde93aa9d2a3f.php";s:41:" phpDocumentor\Reflection\Php\File source";s:32115:"<?php

use Twig\Environment;
use Twig\Error\LoaderError;
use Twig\Error\RuntimeError;
use Twig\Extension\SandboxExtension;
use Twig\Markup;
use Twig\Sandbox\SecurityError;
use Twig\Sandbox\SecurityNotAllowedTagError;
use Twig\Sandbox\SecurityNotAllowedFilterError;
use Twig\Sandbox\SecurityNotAllowedFunctionError;
use Twig\Source;
use Twig\Template;

/* admin/admin_formations/admin_formation.html.twig */
class __TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e extends Template
{
    private $source;
    private $macros = [];

    public function __construct(Environment $env)
    {
        parent::__construct($env);

        $this->source = $this->getSourceContext();

        $this->blocks = [
            'title' => [$this, 'block_title'],
            'body' => [$this, 'block_body'],
        ];
    }

    protected function doGetParent(array $context)
    {
        // line 1
        return "baseadmin.html.twig";
    }

    protected function doDisplay(array $context, array $blocks = [])
    {
        $macros = $this->macros;
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->enter($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "admin/admin_formations/admin_formation.html.twig"));

        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02 = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->enter($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "template", "admin/admin_formations/admin_formation.html.twig"));

        $this->parent = $this->loadTemplate("baseadmin.html.twig", "admin/admin_formations/admin_formation.html.twig", 1);
        $this->parent->display($context, array_merge($this->blocks, $blocks));
        
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->leave($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof);

        
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->leave($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof);

    }

    // line 2
    public function block_title($context, array $blocks = [])
    {
        $macros = $this->macros;
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->enter($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "title"));

        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02 = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->enter($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "title"));

        echo "Formations";
        
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->leave($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof);

        
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->leave($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof);

    }

    // line 4
    public function block_body($context, array $blocks = [])
    {
        $macros = $this->macros;
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e = $this->extensions["Symfony\\Bundle\\WebProfilerBundle\\Twig\\WebProfilerExtension"];
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->enter($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "body"));

        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02 = $this->extensions["Symfony\\Bridge\\Twig\\Extension\\ProfilerExtension"];
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->enter($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof = new \Twig\Profiler\Profile($this->getTemplateName(), "block", "body"));

        // line 5
        echo " <h1 class=\"text-center\"> Gestions des Formations</h1>

<!--affichage des flashbag en cas d'erreur ou succées de la suppresion -->
  ";
        // line 8
        $context['_parent'] = $context;
        $context['_seq'] = twig_ensure_traversable(twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 8, $this->source); })()), "flashes", [0 => "success"], "method", false, false, false, 8));
        foreach ($context['_seq'] as $context["_key"] => $context["message"]) {
            // line 9
            echo "    <div class=\"alert alert-success\">
        ";
            // line 10
            echo twig_escape_filter($this->env, $context["message"], "html", null, true);
            echo "
    </div>
  ";
        }
        $_parent = $context['_parent'];
        unset($context['_seq'], $context['_iterated'], $context['_key'], $context['message'], $context['_parent'], $context['loop']);
        $context = array_intersect_key($context, $_parent) + $_parent;
        // line 13
        echo "
  ";
        // line 14
        $context['_parent'] = $context;
        $context['_seq'] = twig_ensure_traversable(twig_get_attribute($this->env, $this->source, (isset($context["app"]) || array_key_exists("app", $context) ? $context["app"] : (function () { throw new RuntimeError('Variable "app" does not exist.', 14, $this->source); })()), "flashes", [0 => "error"], "method", false, false, false, 14));
        foreach ($context['_seq'] as $context["_key"] => $context["message"]) {
            // line 15
            echo "    <div class=\"alert alert-danger\">
            ";
            // line 16
            echo twig_escape_filter($this->env, $context["message"], "html", null, true);
            echo "
    </div>
   ";
        }
        $_parent = $context['_parent'];
        unset($context['_seq'], $context['_iterated'], $context['_key'], $context['message'], $context['_parent'], $context['loop']);
        $context = array_intersect_key($context, $_parent) + $_parent;
        // line 19
        echo "



 <table class=\"table table-striped\">
    <caption>Un tableau qui répertorie toutes les formations</caption>
        <thead>
            <tr>
                <th class=\"text-left align-top\" scope=\"col\">
                    formation<br />
                    <a href=\"";
        // line 29
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("adminformations.sort", ["champ" => "title", "ordre" => "ASC"]), "html", null, true);
        echo "\" class=\"btn btn-info btn-sm active\" role=\"button\" aria-pressed=\"true\"><</a>
                    <a href=\"";
        // line 30
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("adminformations.sort", ["champ" => "title", "ordre" => "DESC"]), "html", null, true);
        echo "\" class=\"btn btn-info btn-sm active\" role=\"button\" aria-pressed=\"true\">></a>
                    <form class=\"form-inline mt-1\" method=\"POST\" action=\"";
        // line 31
        echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("adminformations.findallcontain", ["champ" => "title"]);
        echo "\">
                        <div class=\"form-group mr-1 mb-2\">
                            <input type=\"text\" class=\"sm\" name=\"recherche\" 
                                   value=\"";
        // line 34
        if ((((array_key_exists("valeur", $context)) ? (_twig_default_filter((isset($context["valeur"]) || array_key_exists("valeur", $context) ? $context["valeur"] : (function () { throw new RuntimeError('Variable "valeur" does not exist.', 34, $this->source); })()))) : ("")) &&  !((array_key_exists("table", $context)) ? (_twig_default_filter((isset($context["table"]) || array_key_exists("table", $context) ? $context["table"] : (function () { throw new RuntimeError('Variable "table" does not exist.', 34, $this->source); })()))) : ("")))) {
            echo twig_escape_filter($this->env, (isset($context["valeur"]) || array_key_exists("valeur", $context) ? $context["valeur"] : (function () { throw new RuntimeError('Variable "valeur" does not exist.', 34, $this->source); })()), "html", null, true);
        }
        echo "\">
                            <input type=\"hidden\" name=\"_token\" value=\"";
        // line 35
        echo twig_escape_filter($this->env, $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->renderCsrfToken("filtre_title"), "html", null, true);
        echo "\">
                            <button type=\"submit\" class=\"btn btn-info mb-2 btn-sm\">filtrer</button>
                        </div>
                    </form>                    
                </th>
                <th class=\"text-left align-top\" scope=\"col\">
                    playlist<br />
                    <a href=\"";
        // line 42
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("adminformations.sort", ["table" => "playlist", "champ" => "name", "ordre" => "ASC"]), "html", null, true);
        echo "\" class=\"btn btn-info btn-sm active\" role=\"button\" aria-pressed=\"true\"><</a>
                    <a href=\"";
        // line 43
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("adminformations.sort", ["table" => "playlist", "champ" => "name", "ordre" => "DESC"]), "html", null, true);
        echo "\" class=\"btn btn-info btn-sm active\" role=\"button\" aria-pressed=\"true\">></a>
                    <form class=\"form-inline mt-1\" method=\"POST\" action=\"";
        // line 44
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("adminformations.findallcontain", ["champ" => "name", "table" => "playlist"]), "html", null, true);
        echo "\">
                        <div class=\"form-group mr-1 mb-2\">
                            <input type=\"text\" class=\"sm\" name=\"recherche\" 
                                   value=\"";
        // line 47
        if (((((array_key_exists("valeur", $context)) ? (_twig_default_filter((isset($context["valeur"]) || array_key_exists("valeur", $context) ? $context["valeur"] : (function () { throw new RuntimeError('Variable "valeur" does not exist.', 47, $this->source); })()))) : ("")) && ((array_key_exists("table", $context)) ? (_twig_default_filter((isset($context["table"]) || array_key_exists("table", $context) ? $context["table"] : (function () { throw new RuntimeError('Variable "table" does not exist.', 47, $this->source); })()))) : (""))) && (0 === twig_compare((isset($context["table"]) || array_key_exists("table", $context) ? $context["table"] : (function () { throw new RuntimeError('Variable "table" does not exist.', 47, $this->source); })()), "playlist")))) {
            echo twig_escape_filter($this->env, (isset($context["valeur"]) || array_key_exists("valeur", $context) ? $context["valeur"] : (function () { throw new RuntimeError('Variable "valeur" does not exist.', 47, $this->source); })()), "html", null, true);
        }
        echo "\">
                            <input type=\"hidden\" name=\"_token\" value=\"";
        // line 48
        echo twig_escape_filter($this->env, $this->env->getRuntime('Symfony\Component\Form\FormRenderer')->renderCsrfToken("filtre_name"), "html", null, true);
        echo "\">
                            <button type=\"submit\" class=\"btn btn-info mb-2 btn-sm\">filtrer</button>
                        </div>
                    </form>                    
                </th>
                <th class=\"text-left align-top\" scope=\"col\">
                    catégories
                    <form class=\"form-inline mt-1\" method=\"POST\" action=\"";
        // line 55
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("adminformations.findallcontain", ["champ" => "id", "table" => "categories"]), "html", null, true);
        echo "\">
                        <select class=\"form-select form-select-sm\" name=\"recherche\" id=\"recherche\" onchange=\"this.form.submit()\">
                            <option value=\"\"></option>
                            ";
        // line 58
        $context['_parent'] = $context;
        $context['_seq'] = twig_ensure_traversable((isset($context["categories"]) || array_key_exists("categories", $context) ? $context["categories"] : (function () { throw new RuntimeError('Variable "categories" does not exist.', 58, $this->source); })()));
        foreach ($context['_seq'] as $context["_key"] => $context["categorie"]) {
            // line 59
            echo "                                <option 
                                    ";
            // line 60
            if ((((array_key_exists("valeur", $context)) ? (_twig_default_filter((isset($context["valeur"]) || array_key_exists("valeur", $context) ? $context["valeur"] : (function () { throw new RuntimeError('Variable "valeur" does not exist.', 60, $this->source); })()))) : ("")) && (0 === twig_compare((isset($context["valeur"]) || array_key_exists("valeur", $context) ? $context["valeur"] : (function () { throw new RuntimeError('Variable "valeur" does not exist.', 60, $this->source); })()), twig_get_attribute($this->env, $this->source, $context["categorie"], "id", [], "any", false, false, false, 60))))) {
                echo " 
                                        selected
                                    ";
            }
            // line 62
            echo " 
                                    value=\"";
            // line 63
            echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, $context["categorie"], "id", [], "any", false, false, false, 63), "html", null, true);
            echo "\">";
            echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, $context["categorie"], "name", [], "any", false, false, false, 63), "html", null, true);
            echo "
                                </option>
                            ";
        }
        $_parent = $context['_parent'];
        unset($context['_seq'], $context['_iterated'], $context['_key'], $context['categorie'], $context['_parent'], $context['loop']);
        $context = array_intersect_key($context, $_parent) + $_parent;
        // line 66
        echo "                        </select>                    
                    </form>            
                </th>
                <th class=\"text-center align-top\" scope=\"col\">
                    date<br />
                    <a href=\"";
        // line 71
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("adminformations.sort", ["champ" => "publishedAt", "ordre" => "ASC"]), "html", null, true);
        echo "\" class=\"btn btn-info btn-sm active\" role=\"button\" aria-pressed=\"true\"><</a>
                    <a href=\"";
        // line 72
        echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("adminformations.sort", ["champ" => "publishedAt", "ordre" => "DESC"]), "html", null, true);
        echo "\" class=\"btn btn-info btn-sm active\" role=\"button\" aria-pressed=\"true\">></a>                    
                </th>
                <!-- Ajout d'une nouvelle formation -->
                <th class=\"text-center align-top\" scope=\"col\">
                  <a href =\"";
        // line 76
        echo $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("adminformation.add");
        echo "\"  class=\"btn btn-info\"> Ajouter Formation </a>
                </th>

                <th class=\"text-center align-top\" scope=\"col\">
                    &nbsp;
                </th>
            </tr>
        </thead>

  <!-- Zone d'ajout ou modification de formation -->
    ";
        // line 86
        if ((isset($context["showForm"]) || array_key_exists("showForm", $context) ? $context["showForm"] : (function () { throw new RuntimeError('Variable "showForm" does not exist.', 86, $this->source); })())) {
            // line 87
            echo "  
    
    ";
            // line 89
            $this->loadTemplate("_adminformformation.html.twig", "admin/admin_formations/admin_formation.html.twig", 89)->display(twig_array_merge($context, ["formFormation" => (isset($context["formFormation"]) || array_key_exists("formFormation", $context) ? $context["formFormation"] : (function () { throw new RuntimeError('Variable "formFormation" does not exist.', 89, $this->source); })())]));
            // line 90
            echo "    ";
        }
        // line 91
        echo "
        <tbody>
            ";
        // line 93
        $context['_parent'] = $context;
        $context['_seq'] = twig_ensure_traversable((isset($context["formations"]) || array_key_exists("formations", $context) ? $context["formations"] : (function () { throw new RuntimeError('Variable "formations" does not exist.', 93, $this->source); })()));
        foreach ($context['_seq'] as $context["_key"] => $context["formation"]) {
            // line 94
            echo "                <tr class=\"align-middle\">
                    <td>
                        <h5 class=\"text-info\">
                            ";
            // line 97
            echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, $context["formation"], "title", [], "any", false, false, false, 97), "html", null, true);
            echo "
                        </h5>
                    </td>
                    <td class=\"text-left\">
                        ";
            // line 101
            echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, twig_get_attribute($this->env, $this->source, $context["formation"], "playlist", [], "any", false, false, false, 101), "name", [], "any", false, false, false, 101), "html", null, true);
            echo "                  
                    </td>                    
                    <td class=\"text-left\">
                        ";
            // line 104
            $context['_parent'] = $context;
            $context['_seq'] = twig_ensure_traversable(twig_get_attribute($this->env, $this->source, $context["formation"], "categories", [], "any", false, false, false, 104));
            foreach ($context['_seq'] as $context["_key"] => $context["categorie"]) {
                // line 105
                echo "                            ";
                echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, $context["categorie"], "name", [], "any", false, false, false, 105), "html", null, true);
                echo "<br />
                        ";
            }
            $_parent = $context['_parent'];
            unset($context['_seq'], $context['_iterated'], $context['_key'], $context['categorie'], $context['_parent'], $context['loop']);
            $context = array_intersect_key($context, $_parent) + $_parent;
            // line 107
            echo "                    </td>                    
                    <td class=\"text-center\">
                        ";
            // line 109
            echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, $context["formation"], "publishedatstring", [], "any", false, false, false, 109), "html", null, true);
            echo "
                    </td>
                    <td class=\"text-center\">
                        ";
            // line 112
            if (twig_get_attribute($this->env, $this->source, $context["formation"], "miniature", [], "any", false, false, false, 112)) {
                // line 113
                echo "                            <a href=\"";
                echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("formations.showone", ["id" => twig_get_attribute($this->env, $this->source, $context["formation"], "id", [], "any", false, false, false, 113)]), "html", null, true);
                echo "\">
                                <img src=\"";
                // line 114
                echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, $context["formation"], "miniature", [], "any", false, false, false, 114), "html", null, true);
                echo "\" alt=\"miniature de video ytb\">
                            </a>
                    <!-- ajout de button , modifier et supprimmer route par encotre configuré -->
                    
              
                        ";
            }
            // line 120
            echo "                    </td>
                    <td>   
                        <a href=\"";
            // line 122
            echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("adminformation.edit", ["id" => twig_get_attribute($this->env, $this->source, $context["formation"], "id", [], "any", false, false, false, 122)]), "html", null, true);
            echo "\" class=\"btn btn-secondary\">Modifier</a>
                        <a href=\"";
            // line 123
            echo twig_escape_filter($this->env, $this->extensions['Symfony\Bridge\Twig\Extension\RoutingExtension']->getPath("adminformation.delete", ["id" => twig_get_attribute($this->env, $this->source, $context["formation"], "id", [], "any", false, false, false, 123)]), "html", null, true);
            echo "\" class=\"btn btn-danger btn-sm\" onclick=\"return confirm('Etes-vous sûr de vouloir supprimer ";
            echo twig_escape_filter($this->env, twig_get_attribute($this->env, $this->source, $context["formation"], "title", [], "any", false, false, false, 123), "html", null, true);
            echo " ?')\">Supprimer</a>


                    </td>

                </tr>
            ";
        }
        $_parent = $context['_parent'];
        unset($context['_seq'], $context['_iterated'], $context['_key'], $context['formation'], $context['_parent'], $context['loop']);
        $context = array_intersect_key($context, $_parent) + $_parent;
        // line 130
        echo "        </tbody>
    </table>

  

";
        
        $__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02->leave($__internal_319393461309892924ff6e74d6d6e64287df64b63545b994e100d4ab223aed02_prof);

        
        $__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e->leave($__internal_085b0142806202599c7fe3b329164a92397d8978207a37e79d70b8c52599e33e_prof);

    }

    public function getTemplateName()
    {
        return "admin/admin_formations/admin_formation.html.twig";
    }

    public function isTraitable()
    {
        return false;
    }

    public function getDebugInfo()
    {
        return array (  363 => 130,  348 => 123,  344 => 122,  340 => 120,  331 => 114,  326 => 113,  324 => 112,  318 => 109,  314 => 107,  305 => 105,  301 => 104,  295 => 101,  288 => 97,  283 => 94,  279 => 93,  275 => 91,  272 => 90,  270 => 89,  266 => 87,  264 => 86,  251 => 76,  244 => 72,  240 => 71,  233 => 66,  222 => 63,  219 => 62,  213 => 60,  210 => 59,  206 => 58,  200 => 55,  190 => 48,  184 => 47,  178 => 44,  174 => 43,  170 => 42,  160 => 35,  154 => 34,  148 => 31,  144 => 30,  140 => 29,  128 => 19,  119 => 16,  116 => 15,  112 => 14,  109 => 13,  100 => 10,  97 => 9,  93 => 8,  88 => 5,  78 => 4,  59 => 2,  36 => 1,);
    }

    public function getSourceContext()
    {
        return new Source("{% extends \"baseadmin.html.twig\" %}
{% block title %}Formations{% endblock %}

{% block body %}
 <h1 class=\"text-center\"> Gestions des Formations</h1>

<!--affichage des flashbag en cas d'erreur ou succées de la suppresion -->
  {% for message in app.flashes('success') %}
    <div class=\"alert alert-success\">
        {{ message }}
    </div>
  {% endfor %}

  {% for message in app.flashes('error') %}
    <div class=\"alert alert-danger\">
            {{ message }}
    </div>
   {% endfor %}




 <table class=\"table table-striped\">
    <caption>Un tableau qui répertorie toutes les formations</caption>
        <thead>
            <tr>
                <th class=\"text-left align-top\" scope=\"col\">
                    formation<br />
                    <a href=\"{{ path('adminformations.sort', {champ:'title', ordre:'ASC'}) }}\" class=\"btn btn-info btn-sm active\" role=\"button\" aria-pressed=\"true\"><</a>
                    <a href=\"{{ path('adminformations.sort', {champ:'title', ordre:'DESC'}) }}\" class=\"btn btn-info btn-sm active\" role=\"button\" aria-pressed=\"true\">></a>
                    <form class=\"form-inline mt-1\" method=\"POST\" action=\"{{ path('adminformations.findallcontain', {champ:'title'}) }}\">
                        <div class=\"form-group mr-1 mb-2\">
                            <input type=\"text\" class=\"sm\" name=\"recherche\" 
                                   value=\"{% if valeur|default and not table|default %}{{ valeur }}{% endif %}\">
                            <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token('filtre_title') }}\">
                            <button type=\"submit\" class=\"btn btn-info mb-2 btn-sm\">filtrer</button>
                        </div>
                    </form>                    
                </th>
                <th class=\"text-left align-top\" scope=\"col\">
                    playlist<br />
                    <a href=\"{{ path('adminformations.sort', {table:'playlist', champ:'name', ordre:'ASC'}) }}\" class=\"btn btn-info btn-sm active\" role=\"button\" aria-pressed=\"true\"><</a>
                    <a href=\"{{ path('adminformations.sort', {table:'playlist', champ:'name', ordre:'DESC'}) }}\" class=\"btn btn-info btn-sm active\" role=\"button\" aria-pressed=\"true\">></a>
                    <form class=\"form-inline mt-1\" method=\"POST\" action=\"{{ path('adminformations.findallcontain', {champ:'name', table:'playlist'}) }}\">
                        <div class=\"form-group mr-1 mb-2\">
                            <input type=\"text\" class=\"sm\" name=\"recherche\" 
                                   value=\"{% if valeur|default and table|default and table=='playlist' %}{{ valeur }}{% endif %}\">
                            <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token('filtre_name') }}\">
                            <button type=\"submit\" class=\"btn btn-info mb-2 btn-sm\">filtrer</button>
                        </div>
                    </form>                    
                </th>
                <th class=\"text-left align-top\" scope=\"col\">
                    catégories
                    <form class=\"form-inline mt-1\" method=\"POST\" action=\"{{ path('adminformations.findallcontain', {champ:'id', table:'categories'}) }}\">
                        <select class=\"form-select form-select-sm\" name=\"recherche\" id=\"recherche\" onchange=\"this.form.submit()\">
                            <option value=\"\"></option>
                            {% for categorie in categories %}
                                <option 
                                    {% if valeur|default and valeur==categorie.id %} 
                                        selected
                                    {% endif %} 
                                    value=\"{{ categorie.id }}\">{{ categorie.name }}
                                </option>
                            {% endfor %}
                        </select>                    
                    </form>            
                </th>
                <th class=\"text-center align-top\" scope=\"col\">
                    date<br />
                    <a href=\"{{ path('adminformations.sort', {champ:'publishedAt', ordre:'ASC'}) }}\" class=\"btn btn-info btn-sm active\" role=\"button\" aria-pressed=\"true\"><</a>
                    <a href=\"{{ path('adminformations.sort', {champ:'publishedAt', ordre:'DESC'}) }}\" class=\"btn btn-info btn-sm active\" role=\"button\" aria-pressed=\"true\">></a>                    
                </th>
                <!-- Ajout d'une nouvelle formation -->
                <th class=\"text-center align-top\" scope=\"col\">
                  <a href =\"{{path('adminformation.add')}}\"  class=\"btn btn-info\"> Ajouter Formation </a>
                </th>

                <th class=\"text-center align-top\" scope=\"col\">
                    &nbsp;
                </th>
            </tr>
        </thead>

  <!-- Zone d'ajout ou modification de formation -->
    {% if showForm %}
  
    
    {% include '_adminformformation.html.twig' with {'formFormation': formFormation} %}
    {% endif %}

        <tbody>
            {% for formation in formations %}
                <tr class=\"align-middle\">
                    <td>
                        <h5 class=\"text-info\">
                            {{ formation.title }}
                        </h5>
                    </td>
                    <td class=\"text-left\">
                        {{ formation.playlist.name }}                  
                    </td>                    
                    <td class=\"text-left\">
                        {% for categorie in formation.categories %}
                            {{ categorie.name }}<br />
                        {% endfor %}
                    </td>                    
                    <td class=\"text-center\">
                        {{ formation.publishedatstring }}
                    </td>
                    <td class=\"text-center\">
                        {% if formation.miniature %}
                            <a href=\"{{ path('formations.showone', {id:formation.id}) }}\">
                                <img src=\"{{ formation.miniature }}\" alt=\"miniature de video ytb\">
                            </a>
                    <!-- ajout de button , modifier et supprimmer route par encotre configuré -->
                    
              
                        {% endif %}
                    </td>
                    <td>   
                        <a href=\"{{path('adminformation.edit', {id:formation.id})}}\" class=\"btn btn-secondary\">Modifier</a>
                        <a href=\"{{ path('adminformation.delete', {id: formation.id}) }}\" class=\"btn btn-danger btn-sm\" onclick=\"return confirm('Etes-vous sûr de vouloir supprimer {{ formation.title }} ?')\">Supprimer</a>


                    </td>

                </tr>
            {% endfor %}
        </tbody>
    </table>

  

{% endblock %}
", "admin/admin_formations/admin_formation.html.twig", "C:\\wamp64\\www\\mediatekformation\\templates\\admin\\admin_formations\\admin_formation.html.twig");
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:80:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e";O:35:"phpDocumentor\Reflection\Php\Class_":12:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:80:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e";s:36:" phpDocumentor\Reflection\Fqsen name";s:79:"__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:14:"\Twig\Template";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"Template";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:2:{s:89:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::$source";O:37:"phpDocumentor\Reflection\Php\Property":10:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:89:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::$source";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"source";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";N;s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:18;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}s:89:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::$macros";O:37:"phpDocumentor\Reflection\Php\Property":10:{s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:89:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::$macros";s:36:" phpDocumentor\Reflection\Fqsen name";s:6:"macros";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";N;s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:46:" phpDocumentor\Reflection\Php\Property default";s:2:"[]";s:45:" phpDocumentor\Reflection\Php\Property static";b:0;s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:19;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:9:{s:95:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:95:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"env";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:17:"\Twig\Environment";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Environment";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:21;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:95:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::doGetParent()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:95:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::doGetParent()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"doGetParent";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:33;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:93:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::doDisplay()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:93:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::doDisplay()";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"doDisplay";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:9:"protected";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"blocks";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:39;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:95:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::block_title()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:95:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::block_title()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"block_title";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"blocks";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:59;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:94:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::block_body()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:94:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::block_body()";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"block_body";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"context";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"blocks";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:46:" phpDocumentor\Reflection\Php\Argument default";s:2:"[]";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:78;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:99:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::getTemplateName()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:99:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::getTemplateName()";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"getTemplateName";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:377;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:95:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::isTraitable()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:95:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::isTraitable()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"isTraitable";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:382;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:96:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::getDebugInfo()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:96:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::getDebugInfo()";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"getDebugInfo";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:387;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:100:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::getSourceContext()";O:35:"phpDocumentor\Reflection\Php\Method":10:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:100:"\__TwigTemplate_5642fac913391317a057ba9df40405d25c0c240970260c356870fd15427b925e::getSourceContext()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"getSourceContext";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:392;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:16;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";